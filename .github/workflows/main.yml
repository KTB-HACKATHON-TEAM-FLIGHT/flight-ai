name: Django CI/CD
on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django djangorestframework drf-yasg gunicorn  # gunicorn 추가
          pip install -r requirements.txt --no-deps

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create secrets.json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "secrets.json"
          json: ${{ secrets.SECRETS }}
          dir: './chatai'

      - name: Upload Code to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
          mkdir -p /home/ubuntu/chatai/logs
          mkdir -p /home/ubuntu/chatai/staticfiles
          EOF
          scp -o StrictHostKeyChecking=no -i key.pem -r ./* $EC2_USER@$EC2_HOST:/home/ubuntu/chatai  # 루트 디렉토리에서 모든 파일 업로드
          rm key.pem

  deploy:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      - name: Deploy and Verify
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
          pkill -9 gunicorn || true

          sudo apt update
          sudo apt install -y python3.10
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
          sudo update-alternatives --config python3 <<< "0"
          sudo apt-get install -y python3-apt
          
          # 프로젝트 디렉토리로 이동
          cd /home/ubuntu/chatai
          
          # 가상환경 설정 및 실행
          python3 -m venv venv
          source venv/bin/activate        

          # 최신 pip 설치 및 패키지 설치
          pip install --upgrade pip
          pip install gunicorn
          pip install -r requirements.txt --no-deps
          
          # 데이터베이스 마이그레이션 및 static 파일 수집
          python manage.py migrate
          python manage.py collectstatic --noinput
          
          # Gunicorn 실행
          nohup gunicorn --bind 0.0.0.0:8000 chatai.wsgi:application \
            --workers 3 \
            --timeout 120 \
            --access-logfile logs/gunicorn-access.log \
            --error-logfile logs/gunicorn-error.log &

          # Nginx 서비스 재시작
          sleep 10
          sudo service nginx restart

          # Gunicorn 프로세스 확인
          echo "Checking Gunicorn processes:"
          ps aux | grep gunicorn

          # 로그 확인
          echo "Checking Gunicorn logs:"
          tail -n 20 logs/gunicorn-access.log
          tail -n 20 logs/gunicorn-error.log

          # 서비스 응답 확인
          echo "Testing service response:"
          curl -I http://localhost:8000

          # Nginx 상태 확인
          echo "Checking Nginx status:"
          sudo systemctl status nginx
          EOF
          rm key.pem
